#!/usr/bin/env bash

# File opener for lf file manager

# Function to launch applications
launch_app() {
    setsid -f "$@" >/dev/null 2>&1 ||
    { nohup "$@" >/dev/null 2>&1 & } ||
    (exec "$@" >/dev/null 2>&1 &)
}

# Function to get MIME type
get_mime_type() {
    exiftool -s3 -MIMEType "$1" 2>/dev/null || file --dereference -b --mime-type -- "$1" 2>/dev/null
}

# Function to open files
open_file() {
    local real_f mime_type
    real_f=$(readlink -f "$1" || realpath "$1")
    mime_type=$(get_mime_type "$real_f")
    
    case "$mime_type" in
        application/pdf|application/postscript|image/vnd.djvu|application/epub*)
            launch_app "${READER:-zathura}" "$1"
        ;;
        text/html)
            case "${1##*.}" in
                xls) launch_app localc "$1" ;;
                *) "${EDITOR:-nvim}" "$1" ;;
            esac
        ;;
        text/markdown)
            case "${1##*.}" in
                md|markdown)
                    if command -v presenterm &> /dev/null; then
                        presenterm "$1"
                    else
                        "${EDITOR:-nvim}" "$1"
                    fi
                ;;
                *)
                    "${EDITOR:-nvim}" "$1"
                ;;
            esac
        ;;
        text/troff)
            case "${1##*.}" in
                [0-9]|[01]p|[23]*) man "$1" ;;
                *) "${EDITOR:-nvim}" "$1" ;;
            esac
        ;;
        text/*|application/json|application/javascript|application/pgp-encrypted|inode/x-empty|application/octet-stream|application/x-gettext-translation)
            "${EDITOR:-nvim}" "$1"
        ;;
        image/x-*)
            launch_app "${IMAGE_EDITOR:-gimp}" "$1"
        ;;
        image/*)
            if [[ "$(tty)" == /dev/tty* ]]; then
                "${MPV:-mpv}" --keep-open "$1"
            else
                launch_app "${IMAGE_VIEWER:-vimiv}" "$1"
            fi
        ;;
        audio/*)
            if [[ "$(tty)" == /dev/tty* ]]; then
                "${AUDIO_PLAYER:-${MPV:-mpv}}" --audio-display=no "$1"
            else
                launch_app "${TERMINAL:-alacritty}" -e "${AUDIO_PLAYER:-${MPV:-mpv}}" --audio-display=no "$1"
            fi
        ;;
        video/*)
            if [[ "$(tty)" == /dev/tty* ]]; then
                "${VIDEO_PLAYER:-${MPV:-mpv}}" "$1"
            else
                launch_app "${VIDEO_PLAYER:-${MPV:-mpv}}" "$1"
            fi
        ;;
        application/vnd.sqlite3)
            sqlite3 "$1"
        ;;
        application/zip)
            case "${1##*.}" in
                kra) launch_app krita "$1" ;;
                *) "${OPENER:-xdg-open}" "$1" ;;
            esac
        ;;
        *)
            handle_other_files "$1"
        ;;
    esac
}

# Function to handle other file types
handle_other_files() {
    case "$1" in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2|*.tar.gz|*.tgz|*.tar.lzma|*.tar.xz|*.txz|*.zip|*.rar|*.iso)
            mount_archive "$1"
        ;;
        *)
            "${OPENER:-xdg-open}" "$1"
        ;;
    esac
}

# Function to mount archives
mount_archive() {
    local mntdir="$1-archivemount"
    if [[ ! -d "$mntdir" ]]; then
        mkdir -- "$mntdir"
        archivemount "$1" "$mntdir"
        printf "%s\n" "$mntdir" >> "/tmp/__lf_archivemount_$id"
    fi
    lf -remote "send $id cd '$mntdir'"
    lf -remote "send $id reload"
}

# Main function to open files
open() {
    for f in "$@"; do
        open_file "$f"
    done
}

# Function to open files with a specific application
openwith() {
    local real_f mime_type app
    real_f=$(readlink -f "$1" || realpath "$1")
    mime_type=$(get_mime_type "$real_f")
    
    app=$(select_app "$mime_type")
    open_with_app "$app" "$@"
}

# Function to select an application
select_app() {
    local mime_type="$1"
    case "$mime_type" in
        text/*|application/json|application/javascript|application/pgp-encrypted|inode/x-empty|application/octet-stream)
            menu_select <<-EOF
                $EDITOR
                $EDITOR (new terminal)
                nano
                nano (new terminal)
EOF
        ;;
        image/svg+xml|image/png|image/jpeg|image/gif)
            menu_select <<-EOF
                vimiv
                gimp
                mpv
                krita
                inkscape
EOF
        ;;
        image/x-*)
            menu_select <<-EOF
                gimp
                vimiv
                mpv
EOF
        ;;
        audio/*)
            menu_select <<-EOF
                mpv (force terminal)
                mpv (background)
                mpv (background, only audio)
                mpv (foreground)
                mpv (foreground, only audio)
                mpv (force window)
EOF
        ;;
        video/*)
            menu_select <<-EOF
                mpv
                mpv (background, only audio)
                mpv (foreground, only audio)
                kdenlive
EOF
        ;;
    esac
}

# Function to open a file with a specific application
open_with_app() {
    local app="$1"
    shift
    case "$app" in
        1) "${EDITOR:-nvim}" "$@" ;;
        2) launch_app "${TERMINAL:-alacritty}" -e zsh -i -c "$EDITOR \"\$@\"" -- "$@" ;;
        3) nano "$@" ;;
        4) launch_app "${TERMINAL:-alacritty}" -e nano "$@" ;;
        5) launch_app vimiv "$@" ;;
        6) launch_app gimp "$@" ;;
        7)
            if [[ "$(tty)" == /dev/tty* ]]; then
                "${MPV:-mpv}" --keep-open=yes "$@"
            else
                launch_app "${MPV:-mpv}" --keep-open=yes "$@"
            fi
        ;;
        8) launch_app krita "$@" ;;
        9) launch_app inkscape "$@" ;;
        10) launch_app "${TERMINAL:-alacritty}" -e "$MPV" --audio-display=no "$@" ;;
        11) launch_app "${MPV:-mpv}" "$@" ;;
        12) launch_app "${MPV:-mpv}" --audio-display=no "$@" ;;
        13) "${MPV:-mpv}" "$@" ;;
        14)
            echo
            "${MPV:-mpv}" --audio-display=no "$@"
        ;;
        15) launch_app "${MPV:-mpv}" --force-window "$@" ;;
        16) launch_app "${MPV:-mpv}" --video=no --audio-display=no "$@" ;;
        17)
            echo
            "${MPV:-mpv}" --video=no --audio-display=no "$@"
        ;;
        18) launch_app "${VIDEO_EDITOR:-kdenlive}" "$@" ;;
    esac
}

# Function to display menu and select an option
menu_select() {
    nl -nln | fzf --with-nth 2.. | cut -d' ' -f1
}

# vim: ft=sh